<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1588110_mock_s_0_m2m_progress</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1588110_mock_s_0_m2m_progress">statusVALCHANGES^EQ<item display_value="-- None --" endquery="false" field="status" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update completion of trial</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current) {

    function calculateCompletionPercentage() {
        // Contar o total de cursos ativos na trilha
        var coursesGr = new GlideAggregate('x_1588110_mock_s_0_course');
        coursesGr.addQuery('active', true);
        coursesGr.addQuery('path', current.x_1588110_mock_s_0_course.path);
        coursesGr.addAggregate('COUNT');
        coursesGr.query();

        var totalCourses = 0; // Valor padrão
        if (coursesGr.next()) {
            totalCourses = parseInt(coursesGr.getAggregate('COUNT'), 10); // Converte para número
        }

        // Contar cursos completados pelo estagiário
        var completedGr = new GlideAggregate('x_1588110_mock_s_0_m2m_progress');
        completedGr.addQuery('x_1588110_mock_s_0_intern', current.x_1588110_mock_s_0_intern);
        completedGr.addQuery('status', 'Completed');
        completedGr.addAggregate('COUNT');
        completedGr.query();

        var completedCourses = 0; // Valor padrão
        if (completedGr.next()) {
            completedCourses = parseInt(completedGr.getAggregate('COUNT'), 10); // Converte para número
        }

        // Contar cursos em progresso pelo estagiário
        var inProgressGr = new GlideAggregate('x_1588110_mock_s_0_m2m_progress');
        inProgressGr.addQuery('x_1588110_mock_s_0_intern', current.x_1588110_mock_s_0_intern);
        inProgressGr.addQuery('status', 'In progress');
        inProgressGr.addAggregate('COUNT');
        inProgressGr.query();

        var inProgressCourses = 0; // Valor padrão
        if (inProgressGr.next()) {
            inProgressCourses = parseInt(inProgressGr.getAggregate('COUNT'), 10); // Converte para número
        }

        // Calcular a porcentagem de conclusão
        if (totalCourses > 0) {
            var totalCompletion = (completedCourses * 1) + (inProgressCourses * 0.5); // Completo = 100%, Em progresso = 50%
            var percentage = (totalCompletion / totalCourses) * 100;

            gs.info('Total de cursos: ' + totalCourses);
            gs.info('Cursos completados: ' + completedCourses);
            gs.info('Cursos em progresso: ' + inProgressCourses);
            gs.info('Total completion: ' + totalCompletion);
            gs.info('Porcentagem: ' + percentage);

            return percentage; // Retorna a porcentagem
        } else {
            return 0; // Se não houver cursos, retorna 0%
        }
    }

    // Calcular a porcentagem de conclusão
    var totalPercent = calculateCompletionPercentage();
    gs.info('Porcentagem total: ' + totalPercent);

    // Atualizar o registro da trilha com a porcentagem de conclusão
    var trailGr = new GlideRecord('x_1588110_mock_s_0_m2m_on_trail');
    trailGr.addQuery('x_1588110_mock_s_0_path', current.x_1588110_mock_s_0_course.path);
    trailGr.addQuery('x_1588110_mock_s_0_employee', current.x_1588110_mock_s_0_intern);
    trailGr.query();

    if (trailGr.next()) {
        trailGr.completion = totalPercent; // Atualiza o campo de conclusão
        trailGr.update();
    }

})(current);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-03-21 15:24:11</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>699bda2f83d0a610a6b1ffd6feaad389</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Update completion of trial</sys_name>
        <sys_overrides/>
        <sys_package display_value="Mock SkillUp" source="x_1588110_mock_s_0">76f6e78383931210a6b1ffd6feaad377</sys_package>
        <sys_policy/>
        <sys_scope display_value="Mock SkillUp">76f6e78383931210a6b1ffd6feaad377</sys_scope>
        <sys_update_name>sys_script_699bda2f83d0a610a6b1ffd6feaad389</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-03-21 16:03:03</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=699bda2f83d0a610a6b1ffd6feaad389"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>699bda2f83d0a610a6b1ffd6feaad389</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-03-21 15:28:26</sys_created_on>
        <sys_id>338c12238314a610a6b1ffd6feaad3d9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-03-21 15:28:26</sys_updated_on>
        <table>sys_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
