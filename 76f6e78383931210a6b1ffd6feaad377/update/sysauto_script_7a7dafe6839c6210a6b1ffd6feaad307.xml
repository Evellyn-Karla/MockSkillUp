<?xml version="1.0" encoding="UTF-8"?><record_update table="sysauto_script">
    <sysauto_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <business_calendar/>
        <condition/>
        <conditional>false</conditional>
        <entered_time>1970-01-01 00:00:00</entered_time>
        <max_drift/>
        <name>Courses API Call</name>
        <offset/>
        <offset_type>0</offset_type>
        <run_as display_value="System Administrator">6816f79cc0a8016401c5a33be04be441</run_as>
        <run_as_tz/>
        <run_dayofmonth>1</run_dayofmonth>
        <run_dayofweek>1</run_dayofweek>
        <run_period/>
        <run_start>2025-03-18 18:48:04</run_start>
        <run_time>1970-01-01 08:00:00</run_time>
        <run_type>daily</run_type>
        <script><![CDATA[try {
    var api = new sn_ws.RESTMessageV2('Courses SkillUp API', 'Get all');

    var response = api.execute();
    var responseBody = response.getBody();
    var httpStatus = response.getStatusCode();

    gs.info('Response received with HTTP status: ' + httpStatus);
    gs.info('Response body: ' + responseBody);

    if (responseBody) {
        var data = JSON.parse(responseBody);
        var courses = data.result;

        if (courses && courses.length > 0) {
            gs.info('Number of courses retrieved: ' + courses.length);

            var coursesGR = new GlideRecord('x_1588110_mock_s_0_course');
            for (var i in courses) {
                try {
                    coursesGR.initialize();

                    // Acessando corretamente os valores do objeto
                    coursesGR.name = courses[i].template;
                    coursesGR.training = courses[i].treinamento;
                    coursesGR.duration = courses[i].duracao;
                    coursesGR.order = courses[i].ordem;

                    var sysId = coursesGR.insert();
                    if (sysId) {
                        gs.info('Course inserted successfully with sys_id: ' + sysId);
                    } else {
                        gs.error('Failed to insert course: ' + JSON.stringify(courses[i]));
                    }
                } catch (insertErr) {
                    gs.error('Error inserting course: ' + JSON.stringify(courses[i]) + '. Error: ' + insertErr.message);
                }
            }
        } else {
            gs.warn('No courses found in the response.');
        }
    } else {
        gs.error('Response body is empty.');
    }
} catch (err) {
    var message = err.message;
    gs.error('Error during API execution: ' + message);
}
]]></script>
        <sys_class_name>sysauto_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-03-18 18:48:50</sys_created_on>
        <sys_id>7a7dafe6839c6210a6b1ffd6feaad307</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Courses API Call</sys_name>
        <sys_package display_value="Mock SkillUp" source="x_1588110_mock_s_0">76f6e78383931210a6b1ffd6feaad377</sys_package>
        <sys_policy/>
        <sys_scope display_value="Mock SkillUp">76f6e78383931210a6b1ffd6feaad377</sys_scope>
        <sys_update_name>sysauto_script_7a7dafe6839c6210a6b1ffd6feaad307</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-03-18 19:25:33</sys_updated_on>
        <time_zone/>
        <upgrade_safe>false</upgrade_safe>
    </sysauto_script>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>7a7dafe6839c6210a6b1ffd6feaad307</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-03-18 18:48:47</sys_created_on>
        <sys_id>d9adafe6839c6210a6b1ffd6feaad30c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-03-18 18:48:47</sys_updated_on>
        <table>sysauto_script</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
